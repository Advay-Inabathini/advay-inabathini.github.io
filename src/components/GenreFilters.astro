---
import { photos } from '../data/photographyPhotos.js';

interface Props {
  activeFilter?: string;
}

const { activeFilter } = Astro.props;

const allGenres = [...new Set(photos.flatMap(p => p.genres))];
---
<div id="genre-filters" class="flex justify-center space-x-2 md:space-x-4 mb-8">
  <button data-genre="featured" class:list={["filter-btn", { active: !activeFilter }]}>Featured</button>
  {allGenres.map(genre => (
    <button data-genre={genre.toLowerCase()} class:list={["filter-btn", { active: activeFilter === genre.toLowerCase() }]}>{genre}</button>
  ))}
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterContainer = document.querySelector('#genre-filters');
    if (!filterContainer) return;

    filterContainer.addEventListener('click', (e) => {
      const target = e.target as HTMLElement;
      if (target.tagName !== 'BUTTON') return;

      const genre = target.dataset.genre;
      if (!genre) return;

      // Dispatch a custom event with the selected genre.
      // The page will listen for this to update the photo grid.
      const filterChangeEvent = new CustomEvent('filterchange', {
        detail: { genre }
      });
      document.dispatchEvent(filterChangeEvent);

      // Update the active button state
      filterContainer.querySelector('.active')?.classList.remove('active');
      target.classList.add('active');
    });
  });
</script>

<style>
  .filter-btn {
    @apply bg-transparent border border-gray-600 text-white py-2 px-4 rounded-full transition-colors duration-300;
  }
  .filter-btn:hover {
    @apply bg-gray-700;
  }
  .filter-btn.active {
    @apply bg-white text-black font-bold;
  }
</style> 